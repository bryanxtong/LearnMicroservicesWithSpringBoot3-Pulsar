version: "3.9"

services:
  frontend:
    image: challenges-frontend:1.0
    environment:
      - SPRING_CLOUD_GATEWAY_HOST=gateway
    ports:
      - '3000:80'
  multiplication:
    image: multiplication:0.0.1-SNAPSHOT
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_PULSAR_HOST=pulsar
      - SPRING_CLOUD_ZIPKIN_HOST=zipkin
    depends_on:
      pulsar:
         condition: service_healthy
      zipkin:
         condition: service_healthy
      consul-importer:
         condition: service_completed_successfully
    networks:
      - microservices
  gamification:
    image: gamification:0.0.1-SNAPSHOT
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_PULSAR_HOST=pulsar
      - SPRING_CLOUD_ZIPKIN_HOST=zipkin
    depends_on:
      pulsar:
         condition: service_healthy
      zipkin:
         condition: service_healthy
      consul-importer:
         condition: service_completed_successfully
    networks:
      - microservices
  gateway:
    image: gateway:0.0.1-SNAPSHOT
    ports:
      - '8000:8000'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_PULSAR_HOST=pulsar
      - SPRING_CLOUD_ZIPKIN_HOST=zipkin
    depends_on:
      pulsar:
         condition: service_healthy
      zipkin:
         condition: service_healthy
      consul-importer:
         condition: service_completed_successfully
    networks:
      - microservices
  logs:
    image: logs:0.0.1-SNAPSHOT
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_PULSAR_HOST=pulsar
      - SPRING_CLOUD_ZIPKIN_HOST=zipkin
    depends_on:
      pulsar:
         condition: service_healthy
      zipkin:
         condition: service_healthy
      consul-importer:
         condition: service_completed_successfully
    networks:
      - microservices
  consul-importer:
    image: consul-importer:1.0
    depends_on:
      - consul-dev
    networks:
      - microservices
  consul-dev:
    image: hashicorp/consul:1.19.0
    container_name: consul
    ports:
      - '8500:8500'
      - '8600:8600/udp'
    command: 'agent -dev -node=learnmicro -client=0.0.0.0 -log-level=INFO'
    networks:
      - microservices
  pulsar:
    image: 'apachepulsar/pulsar:3.3.1'
    container_name: pulsar
    ports:
      - 6650:6650
      - 8080:8080
    command: 'bin/pulsar standalone'
    healthcheck:
      test: ["CMD","curl","-f","http://localhost:8080/admin/clusters"]
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      zipkin:
         condition: service_healthy
    networks:
      - microservices
  zipkin:
    image: 'openzipkin/zipkin'
    container_name: zipkin
    ports:
      - 9411:9411
    healthcheck:
      #test: [ "CMD","curl","-v","http://localhost:9411/health"]
      test: wget --no-verbose --tries=1 --spider http://localhost:9411/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - microservices
networks:
  microservices:
    driver: bridge